-- A demonstration of duck typing
load system io.

-- define some types with the property 'fly' 
structure Duck with
   function fly with none do
      io @println "a duck can fly".
   end
end

structure Plane with
   function fly with none do
      io @println "a plane can fly".
   end
end

-- create a polymorphic list
let l = [Duck(),Plane()].

-- use the interface that is common to all the objects
for e in l do
   e @fly ().
end

